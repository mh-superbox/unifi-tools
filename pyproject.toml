[build-system]
requires = ["setuptools>=43.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.check-manifest]
ignore = [".editorconfig", "Pipfile", "Pipfile.lock"]

[tool.black]
line-length = 120
target-version = ["py38"]

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true

[tool.pylint.master]
# C0114: missing-module-docstring
# C0115: missing-class-docstring
# C0116: missing-function-docstring
# C0301: line-too-long
# C0302: too-many-lines
# C0411: rong-import-order
# E0401: import-error
# R0801: duplicate-code
# R1732: consider-using-with
disable = ["C0114", "C0115", "C0116", "C0301", "C0302", "C0411", "E0401", "R0801", "R1732"]
notes = ["FIXME"]

load-plugins = [
    "pylint.extensions.bad_builtin",
    "pylint.extensions.check_elif",
    "pylint.extensions.code_style",
    "pylint.extensions.comparetozero",
    "pylint.extensions.comparison_placement",
    "pylint.extensions.confusing_elif",
    "pylint.extensions.consider_ternary_expression",
    "pylint.extensions.docparams",
    "pylint.extensions.docstyle",
    "pylint.extensions.empty_comment",
    "pylint.extensions.emptystring",
    "pylint.extensions.eq_without_hash",
    "pylint.extensions.for_any_all",
    "pylint.extensions.mccabe",
    "pylint.extensions.overlapping_exceptions",
    "pylint.extensions.private_import",
    "pylint.extensions.redefined_variable_type",
    "pylint.extensions.set_membership",
    "pylint.extensions.typing"
]

[tool.pylint.reports]
output-format = "colorized"
reports = false
score = true
argument-rgx = "_?[a-z]{1,}[a-z_0-9]{0,40}(?<!_)$"
class-attribute-rgx = "_?[A-Za-z]{1,}[A-Za-z_0-9]{0,40}(?<!_)$"
variable-rgx = "_?[a-z]{1,}[a-z_0-9]{0,40}(?<!_)$"
max-args = 10
max-attributes = 10

[tool.pylint.variables]
init-import = true

[tool.pylint.format]
max-line-length = 120

[tool.pylint.design]
min-public-methods = 0

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(levelname)-8s | %(asctime)s: %(message)s"
testpaths = ["tests"]
pythonpath = ["src", "tests"]
